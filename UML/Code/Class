@startuml
title Class Diagram: Scene Integration System

skinparam classAttributeIconSize 0

' --- System Classes ---

' Main controller class
class SceneLoader {
  -scenePath: String
  -scene: Scene
  -camera: Camera
  -renderer: Renderer
  +loadScene(path: String): void
  -parseSceneData(): void
  -initializeScene(): void
}

' Integrates components and uses WebGLRenderer to draw
class Renderer {
  -canvas: HTMLCanvasElement
  +render(scene: Scene, camera: Camera): void
}

' Responsible for importing 3D models
class ModelImporter {
  -modelPath: String
  -loadedModels: List<Object3D>
  +loadModels(path: String): List<Object3D>
}

' Applies materials to 3D models
class MaterialHandler {
  -texturePath: String
  +applyMaterials(models: List<Object3D>): void
}

' Handles lighting configuration
class LightingManager {
  -lights: List<Light>
  +setupDefaultLighting(): void
}

' Applies environmental settings
class EnvironmentHandler {
  -hdriPath: String
  +applyHDRI(path: String): void
}

' --- External Library Class ---
class WebGLRenderer {
  +render(scene, camera)
  +setSize(width, height)
}


' --- Class Relationships ---

' SceneLoader creates and owns instances of its helper classes (Composition)
SceneLoader *-- ModelImporter
SceneLoader *-- MaterialHandler
SceneLoader *-- LightingManager
SceneLoader *-- EnvironmentHandler
SceneLoader *-- Renderer

' The system's Renderer uses the external WebGLRenderer (Dependency)
Renderer ..> WebGLRenderer : uses

@enduml